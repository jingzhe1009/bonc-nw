package com.ljz.constant;

public class BoncConstant {

	public static final String COLUMN = ",AND,ARRAY,BEGIN,CASE,CONST,CONTINUE,DELETE,DIV,DO,DOWNTO,ELSE,ELSIF,END,ENDIF,EXCEPTION,EXEC,EXECUTE,EXIT,"
			+ "CURRENT ,OVER,NOWAIT,WAIT,ADD,COLUMN,LINK,IDENTIFIED,ORACLE,DB2,MYSQL,FILE,FOR,FROM,FUNCTION,GOTO,IF,IMMEDIATE,IN,SELECT ,INSERT,INTO,"
			+ "LABEL,LOOP,MOD,NIL,NOT,UNBOUNDED ,PRECEDING,SKIP,LOCKED,DROP,TAG,DATABASE,MINMAX,SECTION,OF,OR,OUT,PACKED,PROCEDURE,PACKAGE,BODY,PROGRAM,"
			+ "RECORD,REPEAT,REVERSE,SET,LIKE,IS,BETWEEN,DISTINCT,UNIQUE,ALL,CONNECT,START,ROW,ALTER,MODIFY,RENAME,PUBLIC,GRANT,ANY,SOME,GROUP,BY,HAVING,"
			+ "ORDER,LIMIT,MODEL,THEN,TO,TYPE,SUBTYPE,UNTIL,TRUNCATE,UPDATE,USING,VALUE,VALUES,WHEN,WHERE,WHILE,WITH,NULL,SYSDATE,OVERWRITE,CURRENT_DATE,"
			+ "FOLLOWING,VIEW,INDEX,GLOBAL,TEMPORARY,OFFSET,EXPORT,OBJECT,PRIVILEGES,ATTRIBUTE,LOCATION,EXECUTOR,MERGE,MATCHED,COMMIT,REF,NOLOGGING,SQLCODE,"
			+ "SQLERRM,PUT_LINE,DBMS_OUTPUT,NEXTVAL,USER,RAISE,LANGUAGE,JAVA,WITHIN,LIBRARY,MACRO,EXCEPT,IDENTIFIER,INTEGER,REAL,LONG,NUMBER,STRING,DOT_TOKEN,"
			+ "DOUBLEQUOTE,ERROR,END_OF_FILE,CHANGE,DIRECTORY,CONTEXT,CREAT,EXCHANGE,ROLLBACK,SPOOL,PROMPT,FORCE,REFERENCES,,ENGINE,INNER,JOIN,CROSS,NATURAL,"
			+ "PARTITION,FULL,LEFT,RIGHT,ON,OUTER,ONLY,SUBPARTITION,SAMPLE,KEEP,IGNORE,RESPECT,REFERENCE,RULES,UNION,INTERSECT,CASCADE,RESTRICT,REVOKE,EXISTS,"
			+ "NOCYCLE,INTERVAL,SYSTIMESTAMP,STATEMENT_TIMESTAMP,CURRENT_TIMESTAMP,LOCALTIMESTAMP,PRIMARY,KEY,COMMENT,PARTITIONED,SLICED,SLICES,ROWS,RANGE,"
			+ "DECLARE,VARIABLE,CREATE,REPLACE,DEFAULT,RETURN,TABLE,SIBLINGS,ROLLUP,CUBE,GROUPING,SETS,ASC,DESC,NULLS,FIRST,LAST,SEPARATOR,QUOTED,UNQUOTED,"
			+ "LINEFEED,DELIMITER,ESCAPE,AS,ENCODE,CLIENT,GENERATED,ALWAYS,CONSTRAINT,ROCKSDB,PARQUET,BULK,COLLECT,"
			+ "NEW,VARYING,AUTHID,CURRENT_USER,DEFINER,CONSTRAINTS,RESULT_CACHE,PARALLEL_ENABLE,DETERMINISTIC,ORGANIZATION,EXTERNAL,FIXED_LENGTH,"
			+ "RVER_BPRESELANKS,NULLIF,ACCESS,PARAMETERS,FIELDS,TERMINATED,CLUSTER,DATA,BEHAVIOR,REPLICATION,DISTRIBUTION,FILETYPE,COMPRESSION,"
			+ "NUMBER_SIGN,DBMS_RANDOM,CURSOR,OPEN,FETCH,CLOSE,SQL,NOTFOUND,FOUND,ROWCOUNT,ISOPEN,ROWTYPE,CONNECT_BY_ISCYCLE,CONNECT_BY_ISLEAF,LEVEL,,PRIOR,"
			+ "CONNECT_BY_ROOT,MEMBER,MULTISET,CARDINALITY,PREFIX,CONDITION,";

	public static String getStr() {
		StringBuffer sb = new StringBuffer();
		sb.append("[DIR]<br>");
		sb.append("DATASRC=~/cdbetl/ETL/TDHOT/DATA/DATASRC<br>");
		sb.append("DATASRC_BACKUP=/cdbetl/ETL/TDHOT/DATA/BACKUP<br>");
		sb.append("PEND=/cdbetl/ETL/TDHOT/DATA/PEND<br>");
		sb.append("QUEUE=/cdbetl/ETL/TDHOT/DATA/QUEUE<br>");
		return sb.toString();
	}

	public static final String outDbName="";
	public static final String outTableName="";

	public static final String CON_E_DATE="3000-12-31";

	public static final String SHELL_CMD = "beeline -u jdbc:hive2://10.97.10.82:6666/sdata_oltp_cfg -n  -p   -f ";

	public static final String SHELL_CMD_INNER = "beeline -u jdbc:hive2://10.97.10.82:6666/odata -n  -p  -f ";

	public static final String SDATA="sdata_oltp";
	public static final String ODATA="odata";

	public static void main(String[] args) {
		String db ="33tD";

		System.out.println(COLUMN.indexOf(db));
	}
}
